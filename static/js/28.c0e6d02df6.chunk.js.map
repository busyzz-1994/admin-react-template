{"version":3,"sources":["pages/dashboard/index.module.scss","pages/dashboard/options.ts","pages/dashboard/index.tsx"],"names":["module","exports","optionsLine","backgroundColor","grid","top","containLabel","tooltip","trigger","axisPointer","lineStyle","color","type","x","y","x2","y2","colorStops","offset","global","xAxis","boundaryGap","axisLabel","formatter","fontSize","margin","axisLine","splitLine","show","axisTick","data","yAxis","nameTextStyle","lineHeight","series","name","smooth","showSymbol","symbolSize","zlevel","itemStyle","borderColor","width","areaStyle","echarts","LinearGradient","optionsBar","showBackground","backgroundStyle","optionsPie","title","text","subtext","left","legend","orient","radius","value","emphasis","shadowBlur","shadowOffsetX","shadowColor","optionsProgress","subtextStyle","itemGap","textStyle","rich","a","fontWeight","b","waveAnimation","amplitude","r","globalCoord","outline","label","titleArr","seriesArr","colors","forEach","item","index","push","textAlign","clockWise","normal","labelLine","hoverAnimation","center","params","position","optionsArray","BarChart","LineChart","PieChart","TitleComponent","TooltipComponent","GridComponent","ToolboxComponent","LegendComponent","CanvasRenderer","rowGutter","xs","sm","md","DashBoard","showIcon","message","className","styles","container","gutter","span","bordered","option","notMerge","lazyUpdate","onChartReady","success"],"mappings":"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","file":"static/js/28.c0e6d02df6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dashboard_container__14NoF\"};","import { ECOption } from './index';\nimport * as echarts from 'echarts/core';\nconst label = [233, 233, 200, 180, 199, 233, 210, 180];\nconst value = [233, 233, 200, 180, 199, 233, 210, 180];\n// 折线图配置\nexport const optionsLine: ECOption = {\n  backgroundColor: '#101e44',\n  grid: {\n    top: 100,\n    containLabel: true,\n  },\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      lineStyle: {\n        color: {\n          type: 'linear',\n          x: 0,\n          y: 0,\n          x2: 0,\n          y2: 1,\n          colorStops: [\n            {\n              offset: 0,\n              color: 'rgba(255,255,255,0)', // 0% 处的颜色\n            },\n            {\n              offset: 0.5,\n              color: 'rgba(255,255,255,1)', // 100% 处的颜色\n            },\n            {\n              offset: 1,\n              color: 'rgba(255,255,255,0)', // 100% 处的颜色\n            },\n          ],\n          global: false, // 缺省为 false\n        },\n      },\n    },\n  },\n  xAxis: [\n    {\n      type: 'category',\n      boundaryGap: false,\n      axisLabel: {\n        formatter: '{value}',\n        fontSize: 14,\n        margin: 20,\n        color: '#7ec7ff',\n      },\n      axisLine: {\n        lineStyle: {\n          color: '#243753',\n        },\n      },\n      splitLine: {\n        show: true,\n        lineStyle: {\n          color: '#243753',\n        },\n      },\n      axisTick: {\n        show: false,\n      },\n      data: label,\n    },\n  ],\n  yAxis: [\n    {\n      boundaryGap: false,\n      type: 'value',\n      axisLabel: {\n        color: '#7ec7ff',\n      },\n      nameTextStyle: {\n        color: '#fff',\n        fontSize: 12,\n        lineHeight: 40,\n      },\n      splitLine: {\n        lineStyle: {\n          color: '#243753',\n        },\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          color: '#283352',\n        },\n      },\n      axisTick: {\n        show: false,\n      },\n    },\n  ],\n  series: [\n    {\n      name: '报名',\n      type: 'line',\n      smooth: true,\n      showSymbol: true,\n      symbolSize: 8,\n      zlevel: 3,\n      itemStyle: {\n        color: '#19a3df',\n        borderColor: '#a3c8d8',\n      },\n      lineStyle: {\n        width: 3,\n        color: '#19a3df',\n      },\n      areaStyle: {\n        color: new echarts.graphic.LinearGradient(\n          0,\n          0,\n          0,\n          1,\n          [\n            {\n              offset: 0,\n              color: 'rgba(88,255,255,0.2)',\n            },\n            {\n              offset: 0.8,\n              color: 'rgba(88,255,255,0)',\n            },\n          ],\n          false\n        ),\n      },\n      data: value,\n    },\n  ],\n};\n\n// 柱状图\nexport const optionsBar: ECOption = {\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  },\n  yAxis: {\n    type: 'value',\n  },\n  series: [\n    {\n      data: [120, 200, 150, 80, 70, 110, 130],\n      type: 'bar',\n      showBackground: true,\n      backgroundStyle: {\n        color: 'rgba(180, 180, 180, 0.2)',\n      },\n    },\n  ],\n};\n\n// 饼图\nexport const optionsPie: ECOption = {\n  title: {\n    text: '某站点用户访问来源',\n    subtext: '纯属虚构',\n    left: 'center',\n  },\n  tooltip: {\n    trigger: 'item',\n  },\n  legend: {\n    orient: 'vertical',\n    left: 'left',\n  },\n  series: [\n    {\n      name: '访问来源',\n      type: 'pie',\n      radius: '50%',\n      data: [\n        { value: 1048, name: '搜索引擎' },\n        { value: 735, name: '直接访问' },\n        { value: 580, name: '邮件营销' },\n        { value: 484, name: '联盟广告' },\n        { value: 300, name: '视频广告' },\n      ],\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)',\n        },\n      },\n    },\n  ],\n};\n\n// 百分比\nexport const optionsProgress = {\n  backgroundColor: '#222',\n  title: {\n    text: `{a|${33}}{b|%}`,\n    x: 'center',\n    y: 'center',\n    subtext: '增长',\n    subtextStyle: {\n      color: '#fff',\n      fontSize: 14,\n    },\n    itemGap: 2,\n    textStyle: {\n      rich: {\n        a: {\n          color: '#fff',\n          fontSize: 20,\n          fontWeight: 'bold',\n        },\n        b: {\n          color: '#fff',\n          fontSize: 14,\n        },\n      },\n    },\n  },\n  series: [\n    {\n      type: 'liquidFill',\n      waveAnimation: 20,\n      radius: '100%',\n      data: [0.35, 0.3],\n      color: ['rgba(83, 211, 228, 0.79)', 'rgba(83, 211, 228, 1)'],\n      amplitude: 5,\n      backgroundStyle: {\n        color: {\n          type: 'radial',\n          x: 0.5,\n          y: 0.5,\n          r: 0.55,\n          colorStops: [\n            {\n              offset: 0,\n              color: 'rgba(7, 112, 135, 0.01)', // 100% 处的颜色\n            },\n            {\n              offset: 1,\n              color: 'rgba(7, 112, 135, 0.69)',\n            },\n          ],\n          globalCoord: false, // 缺省为 false\n        },\n      },\n      outline: {\n        show: false,\n      },\n      label: {\n        show: false,\n      },\n    },\n  ],\n};\n\n// 环形图\nvar data = [\n  {\n    name: '装备制造',\n    value: 54,\n  },\n  {\n    name: '现代材料',\n    value: 44,\n  },\n  {\n    name: '新能源',\n    value: 35,\n  },\n  {\n    name: '新一代信息技术',\n    value: 30,\n  },\n  {\n    name: '商贸物流',\n    value: 20,\n  },\n];\n\nconst titleArr = [],\n  seriesArr = [];\nconst colors = [\n  ['#389af4', '#dfeaff'],\n  ['#ff8c37', '#ffdcc3'],\n  ['#ffc257', '#ffedcc'],\n  ['#fd6f97', '#fed4e0'],\n  ['#a181fc', '#e3d9fe'],\n];\ndata.forEach(function (item, index) {\n  titleArr.push({\n    text: item.name,\n    left: index * 20 + 10 + '%',\n    top: '77%',\n    textAlign: 'center',\n    textStyle: {\n      fontWeight: 'normal',\n      fontSize: '16',\n      color: colors[index][0],\n      textAlign: 'center',\n    },\n  });\n  seriesArr.push({\n    name: item.name,\n    type: 'pie',\n    clockWise: false,\n    radius: [60, 70],\n    itemStyle: {\n      normal: {\n        color: colors[index][0],\n        shadowColor: colors[index][0],\n        shadowBlur: 0,\n        label: {\n          show: false,\n        },\n        labelLine: {\n          show: false,\n        },\n      },\n    },\n    hoverAnimation: false,\n    center: [index * 20 + 10 + '%', '50%'],\n    data: [\n      {\n        value: item.value,\n        label: {\n          normal: {\n            formatter: function (params) {\n              return params.value + '%';\n            },\n            position: 'center',\n            show: true,\n            textStyle: {\n              fontSize: '20',\n              fontWeight: 'bold',\n              color: colors[index][0],\n            },\n          },\n        },\n      },\n      {\n        value: 100 - item.value,\n        name: 'invisible',\n        itemStyle: {\n          normal: {\n            color: colors[index][1],\n          },\n          emphasis: {\n            color: colors[index][1],\n          },\n        },\n      },\n    ],\n  });\n});\nexport const optionsArray: ECOption = {\n  backgroundColor: '#fff',\n  title: titleArr,\n  series: seriesArr,\n};\n","import React, { FC } from 'react';\nimport { Alert, Row, Col, Card, message } from 'antd';\nimport { RowProps } from 'antd/lib/row';\nimport styles from './index.module.scss';\n// echarts相关依赖\n/**\n * @see https://echarts.apache.org/zh/tutorial.html#ECharts%20%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%E6%A6%82%E8%A7%88\n */\nimport * as echarts from 'echarts/core';\nimport ReactEChartsCore from 'echarts-for-react/lib/core';\nimport 'echarts-liquidfill/src/liquidFill.js';\nimport {\n  optionsLine,\n  optionsBar,\n  optionsPie,\n  optionsProgress,\n  optionsArray,\n} from './options';\nimport {\n  BarChart,\n  BarSeriesOption,\n  LineChart,\n  LineSeriesOption,\n  PieChart,\n  PieSeriesOption,\n} from 'echarts/charts';\nimport {\n  TitleComponent,\n  TitleComponentOption,\n  GridComponent,\n  GridComponentOption,\n  TooltipComponent,\n  TooltipComponentOption,\n  LegendComponent,\n  LegendComponentOption,\n  ToolboxComponent,\n  ToolboxComponentOption,\n} from 'echarts/components';\nimport { CanvasRenderer } from 'echarts/renderers';\n\n// 配置类型\nexport type ECOption = echarts.ComposeOption<\n  | BarSeriesOption\n  | LineSeriesOption\n  | PieSeriesOption\n  | TitleComponentOption\n  | GridComponentOption\n  | TooltipComponentOption\n  | LegendComponentOption\n  | ToolboxComponentOption\n>;\n// 注册必须的组件\necharts.use([\n  BarChart,\n  LineChart,\n  PieChart,\n  TitleComponent,\n  TooltipComponent,\n  GridComponent,\n  ToolboxComponent,\n  LegendComponent,\n  CanvasRenderer,\n]);\nconst rowGutter: RowProps['gutter'] = [\n  { xs: 8, sm: 16, md: 24 },\n  { xs: 8, sm: 16, md: 24 },\n];\n\nconst DashBoard: FC = () => {\n  const onChartReady = () => {\n    message.success('折线图渲染完成！');\n  };\n  return (\n    <>\n      <Alert\n        type='info'\n        showIcon\n        message='图形依赖 echarts v5，支持按需引入 v5 版本对 Tree-shaking 兼容更友好了，配合 echarts-for-react 实现，如果不需要图表请删除该页面，减少包的体积'\n      />\n      <div className={styles.container}>\n        <Row gutter={rowGutter}>\n          <Col span={12}>\n            <Card title='折线图' bordered={false}>\n              <ReactEChartsCore\n                echarts={echarts}\n                option={optionsLine}\n                notMerge={true}\n                lazyUpdate={true}\n                onChartReady={onChartReady}\n              />\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card title='柱状图' bordered={false}>\n              <ReactEChartsCore\n                echarts={echarts}\n                option={optionsBar}\n                notMerge={true}\n                lazyUpdate={true}\n              />\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card title='饼状图' bordered={false}>\n              <ReactEChartsCore\n                echarts={echarts}\n                option={optionsPie}\n                notMerge={true}\n                lazyUpdate={true}\n              />\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card title='水波纹' bordered={false}>\n              <ReactEChartsCore\n                echarts={echarts}\n                option={optionsProgress}\n                notMerge={true}\n                lazyUpdate={true}\n              />\n            </Card>\n          </Col>\n          <Col span={24}>\n            <Card title='环形图' bordered={false}>\n              <ReactEChartsCore\n                echarts={echarts}\n                option={optionsArray}\n                notMerge={true}\n                lazyUpdate={true}\n              />\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n};\n\nexport default DashBoard;\n"],"sourceRoot":""}