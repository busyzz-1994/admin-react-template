{"version":3,"sources":["components/ui/section/index.tsx","components/ui/section/index.module.scss","pages/components/dnd/components/multiple/index.module.scss","pages/components/dnd/components/multiple/index.tsx","pages/components/dnd/components/utils.ts","pages/components/dnd/components/vertical/index.tsx","pages/components/dnd/components/horizontal/index.tsx","pages/components/dnd/index.tsx"],"names":["Section","children","className","styles","container","module","exports","DroppableIdNum","getItems","count","Array","from","length","_","k","map","id","content","reorder","list","startIndex","endIndex","result","splice","removed","Vertical","useState","setList","onDragEnd","destination","newList","source","index","droppableId","provided","snapshot","droppableProps","ref","innerRef","style","isDraggingOver","background","padding","width","item","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","grid","margin","placeholder","Horizontal","direction","display","overflow","todoListData","message","doneListData","Multiple","todoList","setTodoList","doneList","setDoneList","getList","todo","done","wrapper","items","droppableSource","droppableDestination","sourceClone","destClone","move","TODO","title","DONE","Dnd"],"mappings":"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","file":"static/js/19.88cf847dfe.chunk.js","sourcesContent":["/*\n * @Author: busyzz\n * @Date: 2021-09-02 15:25:25\n * @Description:\n */\nimport React, { FC } from 'react';\nimport styles from './index.module.scss';\ninterface SectionProps {\n  children?: React.ReactNode;\n}\nconst Section: FC<SectionProps> = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-menu-item\":\"section_ant-menu-item__lghKv\",\"ant-menu-submenu\":\"section_ant-menu-submenu__1DZOU\",\"ant-layout-header\":\"section_ant-layout-header__2VZro\",\"slide-enter\":\"section_slide-enter__2J4rH\",\"slide-appear\":\"section_slide-appear__3nFmf\",\"slide-enter-active\":\"section_slide-enter-active__ujVuU\",\"slide-appear-active\":\"section_slide-appear-active__1I76Z\",\"slide-exit\":\"section_slide-exit__3yian\",\"slide-exit-active\":\"section_slide-exit-active__1kWyR\",\"container\":\"section_container__1d27v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"multiple_wrapper__1Expc\",\"container\":\"multiple_container__3mpk8\",\"title\":\"multiple_title__2uBKK\",\"list\":\"multiple_list__1lu6c\",\"item\":\"multiple_item__HaH05\"};","/*\n * @Author: busyzz\n * @Date: 2021-09-03 15:26:30\n * @Description:\n */\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { reorder, move } from '../utils';\nimport styles from './index.module.scss';\nexport enum DroppableIdNum {\n  TODO = 'todo',\n  DONE = 'done',\n}\nexport type ItemType = {\n  message: string;\n};\nconst todoListData: ItemType[] = [\n  { message: '洗漱' },\n  { message: '坐车' },\n  { message: '上班' },\n  { message: '吃饭' },\n  { message: '下班' },\n  { message: '睡觉' },\n];\nconst doneListData: ItemType[] = [{ message: '起床' }];\nconst Multiple = () => {\n  const [todoList, setTodoList] = useState(todoListData);\n  const [doneList, setDoneList] = useState(doneListData);\n  const getList = (id) => {\n    const idMap = {\n      todo: todoList,\n      done: doneList,\n    };\n    return idMap[id];\n  };\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n    // 如果放到列表以外的地方 直接返回\n    if (!destination) {\n      return;\n    }\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder<ItemType>(\n        getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n      if (source.droppableId === 'todo') {\n        setTodoList(items);\n      } else {\n        setDoneList(items);\n      }\n    } else {\n      const result = move(\n        getList(source.droppableId),\n        getList(destination.droppableId),\n        source,\n        destination\n      );\n      setTodoList(result.todo);\n      setDoneList(result.done);\n    }\n  };\n  return (\n    <div className={styles.wrapper}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId={DroppableIdNum.TODO}>\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              style={{\n                background: snapshot.isDraggingOver ? '#e6f7ff' : '#fff',\n              }}\n              className={styles.container}\n            >\n              <div className={styles.title}>To do</div>\n              <div className={styles.list}>\n                {todoList.map((item, index) => (\n                  <Draggable\n                    key={item.message}\n                    draggableId={item.message}\n                    index={index}\n                  >\n                    {(provided, snapshot) => (\n                      <div\n                        className={styles.item}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={{\n                          background: snapshot.isDragging ? '#ddd' : '#fff',\n                          ...provided.draggableProps.style,\n                        }}\n                      >\n                        {item.message}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            </div>\n          )}\n        </Droppable>\n        <Droppable droppableId={DroppableIdNum.DONE}>\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              style={{\n                background: snapshot.isDraggingOver ? '#e6f7ff' : '#fff',\n              }}\n              className={styles.container}\n            >\n              <div className={styles.title}>Done</div>\n              <div className={styles.list}>\n                {doneList.map((item, index) => (\n                  <Draggable\n                    key={item.message}\n                    draggableId={item.message}\n                    index={index}\n                  >\n                    {(provided, snapshot) => (\n                      <div\n                        className={styles.item}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={{\n                          background: snapshot.isDragging ? '#ddd' : '#fff',\n                          ...provided.draggableProps.style,\n                        }}\n                      >\n                        {item.message}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default Multiple;\n","/*\n * @Author: busyzz\n * @Date: 2021-09-03 14:50:20\n * @Description:\n */\nimport { CSSProperties } from 'react';\nimport { DroppableIdNum, ItemType as MulItemType } from './multiple';\ninterface ItemType {\n  id: string;\n  content: string;\n}\nexport const getItems = (count): ItemType[] =>\n  Array.from({ length: count }, (_, k) => k).map((k) => ({\n    id: `item-${k}`,\n    content: `item ${k}`,\n  }));\n\nexport const reorder = <T = ItemType>(list, startIndex, endIndex): T[] => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result as T[];\n};\nexport const grid = 8;\n\nexport const getItemStyle = (isDragging, draggableStyle): CSSProperties => ({\n  userSelect: 'none',\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  background: isDragging ? 'lightgreen' : 'grey',\n  ...draggableStyle,\n});\n\nexport const getListStyle = (isDraggingOver): CSSProperties => ({\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\n  padding: grid,\n  width: 250,\n});\n\nexport const getListStyleInHorizontal = (isDraggingOver): CSSProperties => ({\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\n  display: 'flex',\n  padding: grid,\n  overflow: 'auto',\n});\n\nexport const getItemStyleInHorizontal = (\n  isDragging,\n  draggableStyle\n): CSSProperties => ({\n  userSelect: 'none',\n  padding: grid * 2,\n  margin: `0 ${grid}px 0 0`,\n  background: isDragging ? 'lightgreen' : 'grey',\n  ...draggableStyle,\n});\n\nexport const move = (\n  source,\n  destination,\n  droppableSource,\n  droppableDestination\n) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {} as Record<DroppableIdNum, MulItemType[]>;\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n","/*\n * @Author: busyzz\n * @Date: 2021-09-03 14:39:58\n * @Description:\n */\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { getItems, reorder, getItemStyle, getListStyle } from '../utils';\n\nconst Vertical = () => {\n  const [list, setList] = useState(() => getItems(5));\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    const newList = reorder(\n      list,\n      result.source.index,\n      result.destination.index\n    );\n    setList(newList);\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId='droppable'>\n        {(provided, snapshot) => (\n          <div\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            style={getListStyle(snapshot.isDraggingOver)}\n          >\n            {list.map((item, index) => (\n              <Draggable key={item.id} draggableId={item.id} index={index}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getItemStyle(\n                      snapshot.isDragging,\n                      provided.draggableProps.style\n                    )}\n                  >\n                    {item.content}\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default Vertical;\n","/*\n * @Author: busyzz\n * @Date: 2021-09-03 14:59:01\n * @Description:\n */\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport {\n  getItems,\n  reorder,\n  getItemStyleInHorizontal,\n  getListStyleInHorizontal,\n} from '../utils';\n\nconst Horizontal = () => {\n  const [list, setList] = useState(() => getItems(30));\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    const newList = reorder(\n      list,\n      result.source.index,\n      result.destination.index\n    );\n    setList(newList);\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId='droppable' direction='horizontal'>\n        {(provided, snapshot) => (\n          <div\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            style={getListStyleInHorizontal(snapshot.isDraggingOver)}\n          >\n            {list.map((item, index) => (\n              <Draggable key={item.id} draggableId={item.id} index={index}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getItemStyleInHorizontal(\n                      snapshot.isDragging,\n                      provided.draggableProps.style\n                    )}\n                  >\n                    {item.content}\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default Horizontal;\n","/*\n * @Author: busyzz\n * @Date: 2021-09-03 14:09:17\n * @Description:\n */\nimport React from 'react';\nimport Vertical from './components/vertical';\nimport Horizontal from './components/horizontal';\nimport Multiple from './components/multiple';\nimport Section from 'components/ui/section';\nconst Dnd = () => {\n  return (\n    <>\n      <Section>垂直列表</Section>\n      <Vertical />\n      <Section>\n        水平列表（\n        注意：该组件为了更流畅的动画，使用的是原生浏览器的API，所以暂时不兼容多行拖放，也就是\n        flex-wrap:wrap 状态下无法正常使用，如需要多行拖放使用 react-sortable-hoc\n        ）\n      </Section>\n      <Horizontal />\n      <Section>多个容器之间的拖放</Section>\n      <Multiple />\n    </>\n  );\n};\n\nexport default Dnd;\n"],"sourceRoot":""}