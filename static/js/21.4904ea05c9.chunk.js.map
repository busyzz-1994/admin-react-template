{"version":3,"sources":["config/layout.tsx","hooks/useResetFormOnCloseModal.tsx","hooks/useSetState.ts","utils/pattern.ts","pages/form/step/index.module.scss","pages/form/step/components/basicForm/index.tsx","pages/form/step/components/goodsForm/index.tsx","pages/form/step/components/storeForm/index.tsx","pages/form/step/index.tsx"],"names":["formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","useResetFormOnCloseModal","form","visible","prevVisibleRef","useRef","useEffect","current","prevVisible","resetFields","useSetState","initialState","useState","state","set","setState","useCallback","patch","prevState","Object","assign","Function","phoneRegExp","module","exports","BasicForm","onValuesChange","scrollToFirstError","autoComplete","Item","name","label","rules","required","message","type","whitespace","validator","rule","v","test","Promise","resolve","reject","Error","Group","value","GoodsForm","StoreForm","Step","Steps","fromList","StepForm","Form","useForm","currentStep","setCurrentStep","formData","setFormData","isDirty","setIsDirty","isSaved","setIsSaved","setFieldsValue","showIcon","style","width","margin","marginBottom","size","title","className","styles","CurrentForm","renderCurrentForm","onClick","length","validateFields","then","console","log","prev","catch","values","data","success","JSON","stringify","when"],"mappings":"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","file":"static/js/21.4904ea05c9.chunk.js","sourcesContent":["export const formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nexport const tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n","import { useRef, useEffect } from 'react';\nimport { FormInstance } from 'antd/lib/form';\n/**\n * @desc Modal类型的表单，关闭时自动重置表单\n */\nconst useResetFormOnCloseModal = ({\n  form,\n  visible,\n}: {\n  form: FormInstance;\n  visible: boolean;\n}) => {\n  const prevVisibleRef = useRef<boolean>();\n  useEffect(() => {\n    prevVisibleRef.current = visible;\n  }, [visible]);\n  const prevVisible = prevVisibleRef.current;\n  useEffect(() => {\n    if (!visible && prevVisible) {\n      form.resetFields();\n    }\n  }, [visible, form, prevVisible]);\n};\n\nexport default useResetFormOnCloseModal;\n","import { useCallback, useState } from 'react';\n\nconst useSetState = <T extends object>(\n  initialState: T = {} as T\n): [T, (patch: Partial<T> | ((prevState: T) => Partial<T>)) => void] => {\n  const [state, set] = useState<T>(initialState);\n  const setState = useCallback((patch) => {\n    set((prevState) =>\n      Object.assign(\n        {},\n        prevState,\n        patch instanceof Function ? patch(prevState) : patch\n      )\n    );\n  }, []);\n\n  return [state, setState];\n};\n\nexport default useSetState;\n","/**\n * @desc 手机号\n */\nexport const phoneRegExp = /^1([358][0-9]|4[579]|66|7[0135678]|9[89])[0-9]{8}$/;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-container\":\"step_form-container__ADHcs\"};","import React, { FC } from 'react';\nimport { phoneRegExp } from 'utils/pattern';\nimport { Form, Input, Radio } from 'antd';\nimport { FormInstance } from 'antd/lib/form';\nimport { formItemLayout } from 'config/layout';\ninterface IProps {\n  form: FormInstance;\n  onValuesChange: () => void;\n}\nconst BasicForm: FC<IProps> = ({ form, onValuesChange }) => {\n  return (\n    <div>\n      <Form\n        form={form}\n        scrollToFirstError\n        autoComplete='off'\n        onValuesChange={onValuesChange}\n        {...formItemLayout}\n      >\n        <Form.Item\n          name='basic.email'\n          label='E-mail'\n          rules={[\n            {\n              required: true,\n              message: '邮箱地址不能为空',\n            },\n            {\n              type: 'email',\n              message: '请输入有效的邮箱格式',\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name='basic.name'\n          label='姓名'\n          rules={[\n            {\n              required: true,\n              message: '姓名不能为空',\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name='basic.phone'\n          label='手机号码'\n          rules={[\n            { required: true, message: '手机号不能为空', whitespace: true },\n            {\n              validator: (rule, v) =>\n                phoneRegExp.test(v) || !v\n                  ? Promise.resolve()\n                  : Promise.reject(new Error('必须为手机号码格式')),\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name='basic.gender'\n          label='性别'\n          rules={[{ required: true, message: '性别不能为空' }]}\n        >\n          <Radio.Group>\n            <Radio value='male'>男</Radio>\n            <Radio value='female'>女</Radio>\n            <Radio value='other'>其他</Radio>\n          </Radio.Group>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\nexport default BasicForm;\n","import React, { FC } from 'react';\nimport { Form, Input } from 'antd';\nimport { FormInstance } from 'antd/lib/form';\nimport { formItemLayout } from 'config/layout';\ninterface IProps {\n  form: FormInstance;\n  onValuesChange: () => void;\n}\nconst GoodsForm: FC<IProps> = ({ form, onValuesChange }) => {\n  return (\n    <Form\n      form={form}\n      onValuesChange={onValuesChange}\n      scrollToFirstError\n      autoComplete='off'\n      {...formItemLayout}\n    >\n      <Form.Item\n        name='goods.name'\n        label='商品名称'\n        rules={[\n          {\n            required: true,\n            message: '请商品名称',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n    </Form>\n  );\n};\nexport default GoodsForm;\n","import React, { FC } from 'react';\nimport { Form, Input } from 'antd';\nimport { FormInstance } from 'antd/lib/form';\nimport { formItemLayout } from 'config/layout';\ninterface IProps {\n  form: FormInstance;\n  onValuesChange: () => void;\n}\nconst StoreForm: FC<IProps> = ({ form, onValuesChange }) => {\n  return (\n    <div>\n      <Form\n        form={form}\n        scrollToFirstError\n        autoComplete='off'\n        onValuesChange={onValuesChange}\n        {...formItemLayout}\n      >\n        <Form.Item\n          name='store.name'\n          label='商店名称'\n          rules={[\n            {\n              required: true,\n              message: '请输入商店名称',\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\nexport default StoreForm;\n","/*\n * @Author: busyzz\n * @Date: 2021-08-27 17:41:12\n * @Description:\n */\n\nimport React, { FC, useState, useEffect } from 'react';\nimport { Alert, Form, Button, Col, Row, Space, Steps, message } from 'antd';\nimport { useSetState } from 'hooks';\nimport { Prompt } from 'react-router-dom';\nimport styles from './index.module.scss';\nimport BasicForm from './components/basicForm';\nimport GoodsForm from './components/goodsForm';\nimport StoreForm from './components/storeForm';\nconst { Step } = Steps;\nconst fromList = [BasicForm, GoodsForm, StoreForm];\ninterface FormInputs {\n  ['basic.email']?: string;\n  ['basic.name']?: string;\n  ['basic.phone']?: string;\n  ['basic.gender']?: string;\n  ['goods.name']?: string;\n  ['store.name']?: string;\n}\nconst StepForm: FC = () => {\n  const [form] = Form.useForm();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [formData, setFormData] = useSetState<FormInputs>({});\n  const [isDirty, setIsDirty] = useState(false);\n  // 是否已经提交过了\n  const [isSaved, setIsSaved] = useState(false);\n  const renderCurrentForm = () => {\n    const onValuesChange = () => {\n      if (!isDirty) {\n        setIsDirty(true);\n      }\n    };\n    const CurrentForm = fromList[currentStep];\n    return <CurrentForm onValuesChange={onValuesChange} form={form} />;\n  };\n  const nextStep = () => {\n    form\n      .validateFields()\n      .then((value) => {\n        console.log(value, 'value');\n        setFormData((prev) => ({\n          ...prev,\n          ...value,\n        }));\n        setCurrentStep(currentStep + 1);\n      })\n      .catch(() => {});\n  };\n  const preStep = () => {\n    setCurrentStep(currentStep - 1);\n  };\n  const onSubmit = () => {\n    form.validateFields().then((values) => {\n      const data = {\n        ...formData,\n        ...values,\n      };\n      console.log(data, 'data');\n      setIsSaved(true);\n      setFormData(data);\n      message.success(JSON.stringify(data));\n    });\n  };\n  // 初始化表单值\n  useEffect(() => {\n    form.setFieldsValue({\n      'basic.email': '540548050@qq.com',\n      'basic.gender': 'male',\n      'goods.name': '鞋子',\n    });\n  }, [form]);\n  return (\n    <div>\n      <Alert\n        message='表单更多 API 请查看：https://ant.design/components/form-cn'\n        type='info'\n        showIcon\n      />\n      <Steps\n        style={{ width: '80%', margin: '20px auto', marginBottom: '40px' }}\n        size='small'\n        current={currentStep}\n      >\n        <Step title='基础信息' />\n        <Step title='商品信息' />\n        <Step title='物流信息' />\n      </Steps>\n      <div className={styles['form-container']}>\n        {renderCurrentForm()}\n        <Row>\n          <Col offset={8}>\n            <Space>\n              {currentStep > 0 && <Button onClick={preStep}>上一步</Button>}\n              {currentStep < fromList.length - 1 && (\n                <Button onClick={nextStep}>下一步</Button>\n              )}\n              {currentStep === fromList.length - 1 && (\n                <Button onClick={onSubmit} type='primary'>\n                  提交\n                </Button>\n              )}\n            </Space>\n          </Col>\n        </Row>\n      </div>\n      <Prompt\n        when={isDirty && !isSaved}\n        message='当前表单还未保存，是否离开本页面'\n      />\n    </div>\n  );\n};\n\nexport default StepForm;\n"],"sourceRoot":""}